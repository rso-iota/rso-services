---
# Source: rso-game/templates/game-svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    statefulset.kubernetes.io/pod-name: game-app-statefulset-0
  name: game-svc-0
  namespace: default
spec:
  ports:
    - protocol: TCP
      targetPort: 8080
      port: 8080
    - protocol: TCP
      targetPort: 8081
      port: 8081
  selector:
    app: game-app
    statefulset.kubernetes.io/pod-name: game-app-statefulset-0
  type: LoadBalancer
---
# Source: rso-game/templates/game-svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    statefulset.kubernetes.io/pod-name: game-app-statefulset-1
  name: game-svc-1
  namespace: default
spec:
  ports:
    - protocol: TCP
      targetPort: 8080
      port: 8080
    - protocol: TCP
      targetPort: 8081
      port: 8081
  selector:
    app: game-app
    statefulset.kubernetes.io/pod-name: game-app-statefulset-1
  type: LoadBalancer
---
# Source: rso-game/templates/game-svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    statefulset.kubernetes.io/pod-name: game-app-statefulset-2
  name: game-svc-2
  namespace: default
spec:
  ports:
    - protocol: TCP
      targetPort: 8080
      port: 8080
    - protocol: TCP
      targetPort: 8081
      port: 8081
  selector:
    app: game-app
    statefulset.kubernetes.io/pod-name: game-app-statefulset-2
  type: LoadBalancer
---
# Source: rso-game/templates/game-deployment.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: game-app
  name: game-app-statefulset
spec:
  replicas: 3
  serviceName: game-svc
  selector:
    matchLabels:
      app: game-app
  template:
    metadata:
      labels:
        app: game-app
    spec:
      containers:
        - image: ghcr.io/rso-iota/rso-game:latest
          ports:
            - containerPort: 8080
              name: httpws
            - containerPort: 8081
              name: grpc
          imagePullPolicy: Always
          name: game-app
          resources: { }
---
# Source: rso-game/templates/game-http-route.yaml
---
# Targets stateful sets of the game services
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: game-service-ingress-0
  namespace: default
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: default-cors-game,default-strip-server-path-0
spec:
  rules:
    - host: rso-2.janvasiljevic.com
      http:
        paths:
          - path: /server/0/
            pathType: Prefix
            backend:
              service:
                name: game-svc-0
                port:
                  number: 8080
          - path: /server/0/ws
            pathType: Prefix
            backend:
              service:
                name: game-svc-0
                port:
                  number: 8080
---
# Source: rso-game/templates/game-http-route.yaml
# Targets stateful sets of the game services
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: game-service-ingress-1
  namespace: default
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: default-cors-game,default-strip-server-path-1
spec:
  rules:
    - host: rso-2.janvasiljevic.com
      http:
        paths:
          - path: /server/1/
            pathType: Prefix
            backend:
              service:
                name: game-svc-1
                port:
                  number: 8080
          - path: /server/1/ws
            pathType: Prefix
            backend:
              service:
                name: game-svc-1
                port:
                  number: 8080
---
# Source: rso-game/templates/game-http-route.yaml
# Targets stateful sets of the game services
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: game-service-ingress-2
  namespace: default
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: default-cors-game,default-strip-server-path-2
spec:
  rules:
    - host: rso-2.janvasiljevic.com
      http:
        paths:
          - path: /server/2/
            pathType: Prefix
            backend:
              service:
                name: game-svc-2
                port:
                  number: 8080
          - path: /server/2/ws
            pathType: Prefix
            backend:
              service:
                name: game-svc-2
                port:
                  number: 8080
---
# Source: rso-game/templates/game-http-route.yaml
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: websocket-headers
  namespace: default
spec:
  headers:
    customRequestHeaders:
      Upgrade: "{http_upgrade}"
      Connection: "Upgrade"
      Host: "{host}"
---
# Source: rso-game/templates/game-http-route.yaml
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: cors-game
  namespace: default
spec:
  headers:
    accessControlAllowCredentials: true
    accessControlAllowMethods: [ "*" ]
    accessControlAllowOriginList: [ "*" ]
    accessControlAllowHeaders: [ "*" ]
    accessControlMaxAge: 100
    addVaryHeader: true
---
# Source: rso-game/templates/game-http-route.yaml
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strip-server-path-0
  namespace: default
spec:
  stripPrefix:
    prefixes:
      - "/server/0/"
---
# Source: rso-game/templates/game-http-route.yaml
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strip-server-path-1
  namespace: default
spec:
  stripPrefix:
    prefixes:
      - "/server/1/"
---
# Source: rso-game/templates/game-http-route.yaml
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strip-server-path-2
  namespace: default
spec:
  stripPrefix:
    prefixes:
      - "/server/2/"
