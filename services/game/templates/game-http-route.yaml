apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: ssl-header
  namespace: {{ .Release.Namespace }}
spec:
  headers:
    customRequestHeaders:
      Connection: keep-alive, Upgrade
      Upgrade: WebSocket

---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: cors-game
  namespace: {{ .Release.Namespace }}
spec:
  headers:
    accessControlAllowCredentials: true
    accessControlAllowMethods: [ "*" ]
    accessControlAllowOriginList: [ "*" ]
    accessControlAllowHeaders: [ "*" ]
    accessControlMaxAge: 100
    addVaryHeader: true
---

{{- $replicasMid := .Values.game.replicaCount | int -}}
{{- range $j := until $replicasMid }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strip-server-path-{{ $j }}
  namespace: {{ $.Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - "/server/{{ $j }}/"
---
{{- end }}

{{- $replicas := .Values.game.replicaCount | int -}}
{{- range $i, $e := until $replicas }}
---
# Targets stateful sets of the game services
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: game-service-ingress-{{ $i }}
  namespace: {{ $.Release.Namespace }}
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: {{ $.Release.Namespace }}-cors-game@kubernetescrd,{{ $.Release.Namespace }}-strip-server-path-{{ $i }}@kubernetescrd,{{ $.Release.Namespace }}-ssl-header@kubernetescrd
spec:
  rules:
    - host: {{ $.Values.dns }}
      http:
        paths:
          - path: /server/{{ $i }}/
            pathType: Prefix
            backend:
              service:
                name: game-svc-{{ $i }}
                port:
                  number: 8080
    {{- end }}