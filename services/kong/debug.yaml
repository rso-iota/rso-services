---
# Source: kong/charts/kong/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
---
# Source: kong/charts/kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kong-validation-webhook-ca-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQU1CZEQydkFuNk04ZlNvOWdYbzdOZGt3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF4TWpFeE1UWTFNRE15V2hjTgpNelF4TWpBNU1UWTFNRE15V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNR2ZLSUVVWTZRU0ZqS2NIWVZheFREczVSaWQKb0QxWWV2amdMU21tT1lFRGxWbTRFQUhrM0Q0K3U5OXJZTS8rWlFEYTJyckRpaUthUkVXVnY1S0cydHdWYWxWOAp0UXZKMmJpUHp5T0IvWlVoR3ZQaDRvWnNmNnVGeVNHNzluV0FNOFRlaTNaOGxKbHkwUHNHU0JxQVBmYytSMFRqCm5zdTR0ZFMyNWRtc0dya1dKdHh0cUZ4QmdyL01MT3lXVG1HelRMN3dVSWxxYnVheUxaZGlxT1puRk51M2dTeHgKR3lzOWdyRFBlb3JUNW9JaTRxdHhpNDB1Umlsb1JhL1dpY1h1MmFxYUxMQStuSThpMnVPS1ZDVVA2UzVRdGxEdwpxSmpoR1plSDlnMXFaWUI1YzZkUGFvZmVpVUFINXRwWUpmOENPUFdRbzRvQ1k2Wkh2VUQ1MDRheS9NOENBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUTBxUE80bDhMZTRudFR4emtJZzNaKwpHY2xvRWpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWxvUmZEMlNhMTFWRE05dnc1QUIyd0gyQ0ZDR2pNdnNIClBBSG54QmhRWjBOTUN1cy9JanlUWnNTWkZrRzlzZG14RkxRZFIvc3paRmlFUXY5TXNWbUZjNTh2clNsYnFjd0oKN2wzWktRYmNZNVhhY1NVMy9ES09WcFMySkkwQVo0ZGhYQVdYVXlETDloVnBTK0J2clg0YTZjaUNhNGZGVTJGcApzVFJjaWRxdDZHQjBubmFpQ2k5anl2TlRiVWRsRFNRQXlMV0RmZ1J4dDFBRWNyUVhmc2c2U3g5S3FYaFRnNUZzCmM3bG52S0ZJL2YwTkRRN2VVS0RIOWN2SS9lbkJoZWJHL0h1elRMOUp2b3NyY2NPRjNybzBwNEp3b0RtYW9MaUQKUllsWGZDY1dxdDBxYXRPVkQwKzYzYkx1bjQrV24yZjV3alZZbHVkMEtyR3NDZUlxZG9YTlhnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd1o4b2dSUmpwQklXTXB3ZGhWckZNT3psR0oyZ1BWaDYrT0F0S2FZNWdRT1ZXYmdRCkFlVGNQajY3MzJ0Z3ovNWxBTnJhdXNPS0lwcEVSWlcva29iYTNCVnFWWHkxQzhuWnVJL1BJNEg5bFNFYTgrSGkKaG14L3E0WEpJYnYyZFlBenhONkxkbnlVbVhMUSt3WklHb0E5OXo1SFJPT2V5N2kxMUxibDJhd2F1UlltM0cybwpYRUdDdjh3czdKWk9ZYk5NdnZCUWlXcHU1ckl0bDJLbzVtY1UyN2VCTEhFYkt6MkNzTTk2aXRQbWdpTGlxM0dMCmpTNUdLV2hGcjlhSnhlN1pxcG9zc0Q2Y2p5TGE0NHBVSlEvcExsQzJVUENvbU9FWmw0ZjJEV3BsZ0hsenAwOXEKaDk2SlFBZm0ybGdsL3dJNDlaQ2ppZ0pqcGtlOVFQblRockw4endJREFRQUJBb0lCQUVLVHZySzcxeE5Jb05kZwpOUXB3enRObThkUElCNXh3ZTBCdW5UandEbC9kWXBLS0p2N3Z1Z2V4UEpxemFvTzZudkp2VHJ6ZmxmVVdCSm5FCnh5M1VMeGQwU2E4QmhhTjdFZUZUbWM5RTJIUmFBTkdSZjNubmZ2TDB1dGRkc1g1dnlkMU5CTG1HVnZaNHM0Rk4KaEtlUUp6Nkg3S3UwZFJycDlhUWlDK0VRTzlRZVAxNVlqeld4TDlxRmc1Z1h2VGxZS2kwN0VGODcybXNaamljUwpjWEdrNE03ZWhyVmRGblp3RGkra3dBZ0IwL1dTMkppRnBvR0ZXTTlTZGIwLzd6OER6SEtBWGRjcTRqQjR4R2haCk1uNXV6SElLR1BPMzVjQUFaZXI0dmNueW11N09OS0xlemtVcWxQdWpVSjJQbWtCZThsWmViK0FtWER5eEJaUzIKNXpkY2Nma0NnWUVBN3BqMGtnRUdvQUM2czhTdUhMSHEydWtFVzRkYjIwamY1U1RhUnhnSm1rcWhvUzRtUzNGWApvV2g3MTUvdlpTem01WUNid040dU9sYnltT1U0S251MWN0RGVoQ29iNXhRNjFHSHNTMUsvam9SaEZMZzU2dVcvCmVCRzJCaXBtUUxUWTNZWm95dHorUUR3NDNxZ3hLdHFpelcvdEwzOVovLzhtQ3JZYU93Wk9aYU1DZ1lFQXo3NXMKbTR6K2dDVFp3eEczaVAvZUNNakRrNDdDdXFsbHpXN2JUaEtYSFdUZVBPdVZucVVBTjQzNTZ3QUw5WkNqZDFvNgpDSEpROEEvUUFvU2s0eVd6Y3hJUjVueStjTWdRajBUeWpqR0NIT0RHeDhlcXQzbTlDY0pGWkgyTitpM1NqZld4CmdKTS9yNG1QS2FGTzlabEJMc2Frd2NXdE1MRGFXbFdRK1NPU3h1VUNnWUJzcFBWb3JsTG45SzBQUXBYTnR5NHIKOUVMcHNwOGZJUFhpajM5ZE5CTGJVUFI4UWxscHJQaXNKTG1QbStJVWZmZTl0V3cyekhUY1Y4OHIwK1JaWSs5aAprcjVnREJTY2lsZW5jZGQ1RFBydzJGS2ticWJnMFRENGFZZ3JFbzl4RTJoVXB1bDh4bGgzdzNSWjN0aFVuUzNZCndnaU13ajZuRlBXcmx2UW13RjVlWlFLQmdCTE03ZkZKMmtKb2sxaUhBdkFnRDgwRnRrVmxWeFFqZm5ZUUFVTFkKaGRxQUpXaW4vVnRsSFZicHYyTllGcno3Z1ArdEo3RloveDhxbnkyTEtZencvWU45Y0NkR3hNbGFJYjJGaE5uLwpld0g0Q2FWTTJaTlBMaDl5K0dxMnZpR1ZBZ2djNHhwNnVQbSszampyUTBVUXdJaG1LOFRwaWRudE4yV1RkdEpGCk9PUk5Bb0dCQU80VTZPYjJOa05YVEd4VGdCQW91aXJ6NUgyUWJuQUdNT2J3STZPbFArTnJHSmFNWTJ6dHFXc0QKNVRweDRKTWNxVlJrU0Z1dXRKRkhIaUhrN3V3UFJZZlFSUFhBN1RtT3JFbXZBVmhkTlcxUEZ1bUZOZ1JQYjdvYgpsNzY2NzVEeGwvWnJsTVhDWkxFTjBiZ1JaN2VFeUF1NkF0QUY4V3RwM0s5bGh4R1hIZUdVCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: kong/charts/kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-kong-validation-webhook-keypair
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURnRENDQW1pZ0F3SUJBZ0lRVjFtY25POVBIanlSUU1WYjRYbWU2ekFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREV5TVRFeE5qVXdNekphRncwegpOREV5TURreE5qVXdNekphTURzeE9UQTNCZ05WQkFNVE1ISmxiR1ZoYzJVdGJtRnRaUzFyYjI1bkxYWmhiR2xrCllYUnBiMjR0ZDJWaWFHOXZheTVrWldaaGRXeDBMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUxtbmlkTU8wRjdnL2VpT2tqRVdkd0lLUmJxL1Jpb0JhWXEyUlpKSVlNNlhFeW5qeWZ4Tgo2ekR4eEVINHg0MnpzSGNXdWpEOE14VUppVk5aQnBXSyt6NnEvS0twV24vemx3OUpiK28xNUo3cS9pZ2srNC9QCjRscnJ3UmF4bjJUTDV2dlZKTldnZG1VSEhVZm5yMGp1aDBqR0ZHalUvR1paZVpwTXhrcnFPRGpvQWV1UlE1YkwKRW5ONzBGc2IrdlRGNTkwd3kxNVVZMWtoeHZJY3NEaU9TQm50YXJHVUxZUHZ1ZHIrN0xyeTcwTUYxSDZCcGMxYgpOeTEwQ0VSM2M3L2tLVjUySEtDcFp6VVdwWDQwaTlLK2c3Tm1iaTZBclh0SlRNM1V6OUsvNHMzQUx4YlhZczZjCnVzV1lBTDMwT1MwRUxaQVVvVCtNWFBsbVVrbHNtdEE1WmVzQ0F3RUFBYU9CbmpDQm16QU9CZ05WSFE4QkFmOEUKQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQwpNQUF3SHdZRFZSMGpCQmd3Rm9BVU5Lanp1SmZDM3VKN1U4YzVDSU4yZmhuSmFCSXdPd1lEVlIwUkJEUXdNb0l3CmNtVnNaV0Z6WlMxdVlXMWxMV3R2Ym1jdGRtRnNhV1JoZEdsdmJpMTNaV0pvYjI5ckxtUmxabUYxYkhRdWMzWmoKTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBOVVwN0NOZ3NLdzFYaUprdUFTUElOQmNuZjk4SURVdnRyRzNqWApUYnlSWEEvRWJQcEM4bDZJZE13eTRDQy9kRDBzTzFxN0kwcVR1NXBSdlZibXp1MUhPSDZOcUViLzArOUhoaW9qClNVUHJraG94cW0zTEI1UFYvYUk1ZWxhTFpJRUtFQzZDc21oNTk2TGZicUwwN2xwUWRraHlPcVArSDMwVU95RTgKaGxuRUw5NE42b0JwbkZaYUd5YlNrK1JNcUVIYWllLy9rU05oamppamdhNHEycjFpTVlmcFY1V2tUWXdGWE9PbwptRXdzbEk2SGEwbkhxUS96bEVrQ3ltU3g5Z3lCdWFXNkxwV2M5YlpnOHQwbXEzWGRTOTgzMUMwMmlHQ1h1Mmo5CmY2UGZXYnRCdG1WWVZXam5EM2VQdTdmdGY1c25yNmVLYlF4RGFXeVJ1MVhFRXNNaQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWFlSjB3N1FYdUQ5Nkk2U01SWjNBZ3BGdXI5R0tnRnBpclpGa2toZ3pwY1RLZVBKCi9FM3JNUEhFUWZqSGpiT3dkeGE2TVB3ekZRbUpVMWtHbFlyN1BxcjhvcWxhZi9PWEQwbHY2alhrbnVyK0tDVDcKajgvaVd1dkJGckdmWk12bSs5VWsxYUIyWlFjZFIrZXZTTzZIU01ZVWFOVDhabGw1bWt6R1N1bzRPT2dCNjVGRApsc3NTYzN2UVd4djY5TVhuM1RETFhsUmpXU0hHOGh5d09JNUlHZTFxc1pRdGcrKzUydjdzdXZMdlF3WFVmb0dsCnpWczNMWFFJUkhkenYrUXBYblljb0tsbk5SYWxmalNMMHI2RHMyWnVMb0N0ZTBsTXpkVFAwci9pemNBdkZ0ZGkKenB5NnhaZ0F2ZlE1TFFRdGtCU2hQNHhjK1daU1NXeWEwRGxsNndJREFRQUJBb0lCQUE0R2VTUUhyM2dyZVNNVAplam5aSDU1NDFqRzRkMzErNDlGRjJkV21RQ0g3U2NoVlhCSUNkTzBhcHAveFFtb1RGQmE3RWMvWGphaGVNeENuCjNoWjRER2o4azk5WitldEdwTGZUN1c5OUtNdFVwMlN5L29vcncwYnBIb292V3dKTFlTVFBRbHdkSmpTVnFBR2gKb0IxYlg3OEFyOVFIbXhYRVZxcHdlRjU2ZVVyYkl5K3owOWJVQnJ4dEVzS1Z4TFlTQ09LeGlFNzB1RnB1dVJ3NQpEeURUWEgvbTNQejFIaWpxRjk1aGYrSENQZTdtdENoZmJrMSs5WkdGNDdnZ3hRYWY5MGErM2dJMVlVSXRYOG16CjdwQUVHK3lObWxLaWtnSXNNZFlRdTNOZjJLRmJPQnMvNy9IcWY3K0ZDSVp6RTFTMjVNZzBsekJidit2S1owMkIKWmI3dHBJRUNnWUVBM3BLYUtidlQ4dXBJTDZ2NHZrYVhGeWVTZXlpdy9Od2JxVVNLeFlJNGpUSk5IdTNGa0hUWApweU5zdjNxT0RLTnorN2hsNklRaU9CTGdCNm5taTU1WHFjdm5YRDI2TWZkOFYzanFYU3p4c1BaM0JpZE00K3ZnCk1naDIvcDd6MUl0SzU0OWl6ZGFuQzhsVmxKWHk0RnFOV3Nyc09yTlZ0LzlHaXNIbndNTmdIYXNDZ1lFQTFZbUUKWXpGNlJpTXh0SFFxSm9HdE1GUkk1TW9XT1psYThFaEVpNkVwV1ZJU1VLSnpaWk56UGtnRlF5bHVEYUxMVjNPTgowanNsRmdsalNEZDRma1JaRGlTUjZ4ZWhHMDZIby9RSXdtMmNvcmhPV0tpd0c5YkJYaFJsaStqcEVCeE9iSG1sCnZyUVk5d01MV2oyanFtMGJlOHRYNWc4alYrZjFVc2ZCRTd6eEdNRUNnWUIvZHIzTEFNSlU3MDcvM2lESjkyczMKMjNYTUNuV3htZXhOZCs5eFJTNVZ6bVRVUFo5VEoxY0paUVEyZEYwOVo2NVlqalh1ZngySnQyV05mZ09HR2R4aQpaVi9PTjV1V1dnRmZwdU94RUxncGZEeVZ6WlAvUTJwVnZQdEl2b2N0UmNoVDdJM05EQTBHZHZzSDZRZjY3R0RmCmlpN1hQelRyOXNuVFZWRC8xK1FIbVFLQmdRQ0NxMncvNXY4VC9HVm1MOCs3VUk5U2k4RXZnQnFwbEpaNWd6K3UKMGlnamFIMmNxa3hEVkQrcFZSa2pTQzc0V1M1bGpXaXp4VTJrZG9veW52ODFCVTRad1hjcGpZUWcyYVZYUnZZMQpSQzRkeFByc2RnMk9lNVJJcGVLZUF5RGJvdmE2bXBZNlpLc0NQUEt0ZmhxeEo2TXgxZlVyNndlTnUzdjc5QkRLCnEwdytBUUtCZ1FDd1ZvR1NGNUNJL1V1SXhYZFhNNUxqRGhMNVZobHpVKzU3ZUk4eGhERDlIbzJhbks1OWtPL3oKZUZCVFkrTjE1bTdmaWxvSG56OUNnL2NHQkVKRlJsWG9uMTdPdVlOYkdjMkgzZUVNU2pXaEpvUnUrdHNqRko0Vwp1MFZ5WDJCR01wejdLenlMcGhmelM5RFBHd1E2cVNPN2piWVpwM3FySG9GZlBQaDIrbStZY0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: kong/charts/kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
  name: release-name-kong
rules:

- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: kong/charts/kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kong
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kong
subjects:
  - kind: ServiceAccount
    name: release-name-kong
    namespace: default
---
# Source: kong/charts/kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: kong/charts/kong/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-kong
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-kong
subjects:
  - kind: ServiceAccount
    name: release-name-kong
    namespace: default
---
# Source: kong/charts/kong/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kong-validation-webhook
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
    app.kubernetes.io/component: app
---
# Source: kong/charts/kong/templates/service-kong-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kong-admin
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
spec:
  type: ClusterIP
  ports:
  - name: kong-admin
    port: 8001
    targetPort: 8001
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "release-name"
---
# Source: kong/charts/kong/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kong-manager
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
spec:
  type: ClusterIP
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "release-name"
---
# Source: kong/charts/kong/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kong-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
    enable-metrics: "true"
spec:
  type: ClusterIP
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  selector:
    app.kubernetes.io/name: kong
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "release-name"
---
# Source: kong/charts/kong/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kong
  namespace:  default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: kong
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "release-name"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: release-name-kong-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: kong
        helm.sh/chart: kong-2.42.0
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.7"
        app.kubernetes.io/component: app
        app: release-name-kong
        
        version: "3.7"
    spec:
      serviceAccountName: release-name-kong
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: kong:3.7
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_API_URI
          value: "http://rso-2.janvasiljevic.com/kong-manager-api"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_API_URL
          value: "https://rso-2.janvasiljevic.com/kong-manager-api"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_PATH
          value: "/kong-manager"
        - name: KONG_ADMIN_GUI_URL
          value: "https://rso-2.janvasiljevic.com/kong-manager"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        
        volumeMounts:
        - name: release-name-kong-prefix-dir
          mountPath: /kong_prefix/
        - name: release-name-kong-tmp
          mountPath: /tmp
      containers:
      - name: ingress-controller
        securityContext:
      
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        - name: cstatus
          containerPort: 10254
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_URL
          value: "http://localhost:8001"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "default/release-name-kong-proxy"
        
        image: kong/kubernetes-ingress-controller:3.3
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: release-name-kong-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
      
      - name: "proxy"
        image: kong:3.7
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_API_URI
          value: "http://rso-2.janvasiljevic.com/kong-manager-api"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_API_URL
          value: "https://rso-2.janvasiljevic.com/kong-manager-api"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_PATH
          value: "/kong-manager"
        - name: KONG_ADMIN_GUI_URL
          value: "https://rso-2.janvasiljevic.com/kong-manager"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8001, [::]:8001"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: admin
          containerPort: 8001
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: release-name-kong-prefix-dir
            mountPath: /kong_prefix/
          - name: release-name-kong-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: release-name-kong-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: release-name-kong-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: release-name-kong-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - name: webhook-cert
          secret:
            secretName: release-name-kong-validation-webhook-keypair
---
# Source: kong/charts/kong/templates/service-kong-admin.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-kong-admin
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.middlewares: "kong-strip-kong-manager-api@kubernetescrd"
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  rules:
  - host: "rso-2.janvasiljevic.com"
    http:
      paths:
        - backend:
            service:
              name: release-name-kong-admin
              port:
                number: 8001
          path: /kong-manager-api
          pathType: Prefix
---
# Source: kong/charts/kong/templates/service-kong-manager.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-kong-manager
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  rules:
  - host: "rso-2.janvasiljevic.com"
    http:
      paths:
        - backend:
            service:
              name: release-name-kong-manager
              port:
                number: 8002
          path: /kong-manager
          pathType: Prefix
---
# Source: kong/charts/kong/templates/service-kong-proxy.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-kong-proxy
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  rules:
  - host: "rso-2.janvasiljevic.com"
    http:
      paths:
        - backend:
            service:
              name: release-name-kong-proxy
              port:
                number: 80
          path: /api
          pathType: Prefix
---
# Source: kong/charts/kong/templates/extraManifests.yaml
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strip-kong-manager-api
  namespace: kong
spec:
  stripPrefix:
    prefixes:
    - /kong-manager-api
---
# Source: kong/charts/kong/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: release-name-kong-validations
  namespace: default
  labels:
    app.kubernetes.io/name: kong
    helm.sh/chart: kong-2.42.0
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.7"
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQU1CZEQydkFuNk04ZlNvOWdYbzdOZGt3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF4TWpFeE1UWTFNRE15V2hjTgpNelF4TWpBNU1UWTFNRE15V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNR2ZLSUVVWTZRU0ZqS2NIWVZheFREczVSaWQKb0QxWWV2amdMU21tT1lFRGxWbTRFQUhrM0Q0K3U5OXJZTS8rWlFEYTJyckRpaUthUkVXVnY1S0cydHdWYWxWOAp0UXZKMmJpUHp5T0IvWlVoR3ZQaDRvWnNmNnVGeVNHNzluV0FNOFRlaTNaOGxKbHkwUHNHU0JxQVBmYytSMFRqCm5zdTR0ZFMyNWRtc0dya1dKdHh0cUZ4QmdyL01MT3lXVG1HelRMN3dVSWxxYnVheUxaZGlxT1puRk51M2dTeHgKR3lzOWdyRFBlb3JUNW9JaTRxdHhpNDB1Umlsb1JhL1dpY1h1MmFxYUxMQStuSThpMnVPS1ZDVVA2UzVRdGxEdwpxSmpoR1plSDlnMXFaWUI1YzZkUGFvZmVpVUFINXRwWUpmOENPUFdRbzRvQ1k2Wkh2VUQ1MDRheS9NOENBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUTBxUE80bDhMZTRudFR4emtJZzNaKwpHY2xvRWpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWxvUmZEMlNhMTFWRE05dnc1QUIyd0gyQ0ZDR2pNdnNIClBBSG54QmhRWjBOTUN1cy9JanlUWnNTWkZrRzlzZG14RkxRZFIvc3paRmlFUXY5TXNWbUZjNTh2clNsYnFjd0oKN2wzWktRYmNZNVhhY1NVMy9ES09WcFMySkkwQVo0ZGhYQVdYVXlETDloVnBTK0J2clg0YTZjaUNhNGZGVTJGcApzVFJjaWRxdDZHQjBubmFpQ2k5anl2TlRiVWRsRFNRQXlMV0RmZ1J4dDFBRWNyUVhmc2c2U3g5S3FYaFRnNUZzCmM3bG52S0ZJL2YwTkRRN2VVS0RIOWN2SS9lbkJoZWJHL0h1elRMOUp2b3NyY2NPRjNybzBwNEp3b0RtYW9MaUQKUllsWGZDY1dxdDBxYXRPVkQwKzYzYkx1bjQrV24yZjV3alZZbHVkMEtyR3NDZUlxZG9YTlhnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: release-name-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: "konghq.com/credential"
      operator: "Exists"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQU1CZEQydkFuNk04ZlNvOWdYbzdOZGt3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF4TWpFeE1UWTFNRE15V2hjTgpNelF4TWpBNU1UWTFNRE15V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNR2ZLSUVVWTZRU0ZqS2NIWVZheFREczVSaWQKb0QxWWV2amdMU21tT1lFRGxWbTRFQUhrM0Q0K3U5OXJZTS8rWlFEYTJyckRpaUthUkVXVnY1S0cydHdWYWxWOAp0UXZKMmJpUHp5T0IvWlVoR3ZQaDRvWnNmNnVGeVNHNzluV0FNOFRlaTNaOGxKbHkwUHNHU0JxQVBmYytSMFRqCm5zdTR0ZFMyNWRtc0dya1dKdHh0cUZ4QmdyL01MT3lXVG1HelRMN3dVSWxxYnVheUxaZGlxT1puRk51M2dTeHgKR3lzOWdyRFBlb3JUNW9JaTRxdHhpNDB1Umlsb1JhL1dpY1h1MmFxYUxMQStuSThpMnVPS1ZDVVA2UzVRdGxEdwpxSmpoR1plSDlnMXFaWUI1YzZkUGFvZmVpVUFINXRwWUpmOENPUFdRbzRvQ1k2Wkh2VUQ1MDRheS9NOENBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUTBxUE80bDhMZTRudFR4emtJZzNaKwpHY2xvRWpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWxvUmZEMlNhMTFWRE05dnc1QUIyd0gyQ0ZDR2pNdnNIClBBSG54QmhRWjBOTUN1cy9JanlUWnNTWkZrRzlzZG14RkxRZFIvc3paRmlFUXY5TXNWbUZjNTh2clNsYnFjd0oKN2wzWktRYmNZNVhhY1NVMy9ES09WcFMySkkwQVo0ZGhYQVdYVXlETDloVnBTK0J2clg0YTZjaUNhNGZGVTJGcApzVFJjaWRxdDZHQjBubmFpQ2k5anl2TlRiVWRsRFNRQXlMV0RmZ1J4dDFBRWNyUVhmc2c2U3g5S3FYaFRnNUZzCmM3bG52S0ZJL2YwTkRRN2VVS0RIOWN2SS9lbkJoZWJHL0h1elRMOUp2b3NyY2NPRjNybzBwNEp3b0RtYW9MaUQKUllsWGZDY1dxdDBxYXRPVkQwKzYzYkx1bjQrV24yZjV3alZZbHVkMEtyR3NDZUlxZG9YTlhnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: release-name-kong-validation-webhook
      namespace: default
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- name: validations.kong.konghq.com
  matchPolicy: Equivalent
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
      - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - 'v1alpha2'
    - 'v1beta1'
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQU1CZEQydkFuNk04ZlNvOWdYbzdOZGt3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF4TWpFeE1UWTFNRE15V2hjTgpNelF4TWpBNU1UWTFNRE15V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNR2ZLSUVVWTZRU0ZqS2NIWVZheFREczVSaWQKb0QxWWV2amdMU21tT1lFRGxWbTRFQUhrM0Q0K3U5OXJZTS8rWlFEYTJyckRpaUthUkVXVnY1S0cydHdWYWxWOAp0UXZKMmJpUHp5T0IvWlVoR3ZQaDRvWnNmNnVGeVNHNzluV0FNOFRlaTNaOGxKbHkwUHNHU0JxQVBmYytSMFRqCm5zdTR0ZFMyNWRtc0dya1dKdHh0cUZ4QmdyL01MT3lXVG1HelRMN3dVSWxxYnVheUxaZGlxT1puRk51M2dTeHgKR3lzOWdyRFBlb3JUNW9JaTRxdHhpNDB1Umlsb1JhL1dpY1h1MmFxYUxMQStuSThpMnVPS1ZDVVA2UzVRdGxEdwpxSmpoR1plSDlnMXFaWUI1YzZkUGFvZmVpVUFINXRwWUpmOENPUFdRbzRvQ1k2Wkh2VUQ1MDRheS9NOENBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUTBxUE80bDhMZTRudFR4emtJZzNaKwpHY2xvRWpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWxvUmZEMlNhMTFWRE05dnc1QUIyd0gyQ0ZDR2pNdnNIClBBSG54QmhRWjBOTUN1cy9JanlUWnNTWkZrRzlzZG14RkxRZFIvc3paRmlFUXY5TXNWbUZjNTh2clNsYnFjd0oKN2wzWktRYmNZNVhhY1NVMy9ES09WcFMySkkwQVo0ZGhYQVdYVXlETDloVnBTK0J2clg0YTZjaUNhNGZGVTJGcApzVFJjaWRxdDZHQjBubmFpQ2k5anl2TlRiVWRsRFNRQXlMV0RmZ1J4dDFBRWNyUVhmc2c2U3g5S3FYaFRnNUZzCmM3bG52S0ZJL2YwTkRRN2VVS0RIOWN2SS9lbkJoZWJHL0h1elRMOUp2b3NyY2NPRjNybzBwNEp3b0RtYW9MaUQKUllsWGZDY1dxdDBxYXRPVkQwKzYzYkx1bjQrV24yZjV3alZZbHVkMEtyR3NDZUlxZG9YTlhnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: release-name-kong-validation-webhook
      namespace: default
